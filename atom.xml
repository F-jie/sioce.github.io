<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fujie&#39;s Blog</title>
  
  <subtitle>学习&amp;生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://sioce.me/"/>
  <updated>2020-07-29T06:34:57.981Z</updated>
  <id>http://sioce.me/</id>
  
  <author>
    <name>Fujie</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>computer network</title>
    <link href="http://sioce.me/2020/07/28/computer-network/"/>
    <id>http://sioce.me/2020/07/28/computer-network/</id>
    <published>2020-07-28T14:12:54.000Z</published>
    <updated>2020-07-29T06:34:57.981Z</updated>
    
    <content type="html"><![CDATA[<h2 id="分层"><a href="#分层" class="headerlink" title="分层"></a>分层</h2><h3 id="总分为七层，这里忽略应用层后的表示层和会话层："><a href="#总分为七层，这里忽略应用层后的表示层和会话层：" class="headerlink" title="总分为七层，这里忽略应用层后的表示层和会话层："></a>总分为七层，这里忽略应用层后的表示层和会话层：</h3><table><thead><tr><th>名称</th><th>协议</th></tr></thead><tbody><tr><td>应用层</td><td>DHCP、HTTP、HTTPS、TRTMP、P2P、DNS、GTP、RPC</td></tr><tr><td>传输层</td><td>UDP、TCP</td></tr><tr><td>网络层</td><td>IMCP、IP、OSPF、BGP、IPSec、GRE</td></tr><tr><td>链路层</td><td>ARP、VLAN、STP</td></tr><tr><td>物理层</td><td>网络跳线</td></tr></tbody></table><h3 id="网络层的IP地址和链路层的MAC地址虽均能唯一确定用户"><a href="#网络层的IP地址和链路层的MAC地址虽均能唯一确定用户" class="headerlink" title="网络层的IP地址和链路层的MAC地址虽均能唯一确定用户"></a>网络层的IP地址和链路层的MAC地址虽均能唯一确定用户</h3><ol><li>但IP可能是动态分布的，用户可能随时下线，此时就需要使用MAC进行区分；</li><li>MAC是早期局域网通信的产物；</li><li>之所以提出IP协议是因为MAC的查找效率低下，另外MAC地址是通过ARP协议获取的，不易处理广播风暴问题；</li></ol><h3 id="关于网络分层的四个问题"><a href="#关于网络分层的四个问题" class="headerlink" title="关于网络分层的四个问题"></a>关于网络分层的四个问题</h3><ol><li>TCP三次握手，MAC和IP对应什么操作？</li><li>已知原始地址和目标地址，其间需通过两个中转站B、C，包在中转站时是如何知道最终目的地的呢？</li><li>我们知道二层设备和三层设备，那么二层设备处理的包的内容是否包含第七层的的内容呢？</li><li>SSH登录公有云主机，都经历那些过程呢？<br> -<em>解答：复杂的程序都是要分层的，网络协议同样如此，网络中的包可以由下层没上层，反之则不成立</em>；<br> -<em>经过网口的网络包会被相应的程序处理(混杂模式)</em>：<pre><code> - 首先摘掉第二层的头进行比对，若MAC地址一致，则交给网络层处理； - 其次摘掉第三层的头比对IP，不一致则进行转发，否则交给传输层处理； - 再其次拿掉第四层的头，交给TCP或者UDP处理，若是一个正常的数据包，则交给监听相应端口的应用程序，若是发起或应答，则需要发送回复包。</code></pre></li><li>二层设备仅处理链路层的MAC地址，三层设备另外需要处理网络层的IP地址；</li></ol><h2 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h2><h3 id="查询IP地址的指令：ifconfig、ip-addr、ipconfig"><a href="#查询IP地址的指令：ifconfig、ip-addr、ipconfig" class="headerlink" title="查询IP地址的指令：ifconfig、ip addr、ipconfig"></a>查询IP地址的指令：ifconfig、ip addr、ipconfig</h3><h3 id="IP地址的分类"><a href="#IP地址的分类" class="headerlink" title="IP地址的分类"></a>IP地址的分类</h3><table><thead><tr><th align="center">类别</th><th align="center">头标识</th><th align="center">网络号(bit)</th><th align="center">主机号(bit)</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">0</td><td align="center">7</td><td align="center">24</td></tr><tr><td align="center">B</td><td align="center">10</td><td align="center">14</td><td align="center">16</td></tr><tr><td align="center">C</td><td align="center">110</td><td align="center">21</td><td align="center">8</td></tr></tbody></table><table><thead><tr><th align="center">类别</th><th align="center">头标识</th><th align="center">其他</th></tr></thead><tbody><tr><td align="center">D</td><td align="center">1110</td><td align="center">多播组号(28)</td></tr><tr><td align="center">E</td><td align="center">11110</td><td align="center">留待后用(27)</td></tr></tbody></table><table><thead><tr><th align="center">类别</th><th align="center">IP地址范围</th><th align="center">最大主机数</th><th align="center">私有IP地址范围</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">0.0.0.0-127.255.255.255</td><td align="center">16777214</td><td align="center">10.0.0.0-10.255.255.255</td></tr><tr><td align="center">B</td><td align="center">128.0.0.0-191.255.255.255</td><td align="center">65534</td><td align="center">172.16.0.0-172.31.255.255</td></tr><tr><td align="center">C</td><td align="center">162.0.0.0-233.255.255.255</td><td align="center">254</td><td align="center">192.168.0.0-192.168.255.255</td></tr></tbody></table><ol><li>由上表可见，A、B、C三类IP的主机数分配严重不均，因而出现了<strong>无类型域间选路(CIDR)</strong>:<ul><li>CIDR将IP地址分为两部分，前面是网络号，后面是主机号，如10.100.122.2/24，24表示网络号长度；</li><li>和CIDR共存的是<strong>广播地址</strong>和<strong>子网掩码</strong>，如10.100.122.2/24对应的广播地址为10.100.122.255，子网掩码是255.255.255.0，向广播地址发送数据，则10.100.122.:中的所有机器都能收到；将IP和子网掩码进行与操作，即可得网络号。</li></ul></li><li>工作中几乎不涉及IP分类，仅使用CIDR，但需要区分公有IP和私有IP。每个网段中的第一个地址往往是网络的出口地址，最后一个地址则是广播地址；</li><li><strong>组播地址</strong>，使用这类地址，属于某个组的机器都能收到；</li><li><strong>MAC地址</strong>，它虽然是唯一的，但不具备大范围定位功能。它能避免组网过程中的冲突问题。</li><li><strong>网络的状态标识(net_device flags)</strong>：<ul><li><strong>UP</strong>：表示网卡启动；</li><li><strong>BROADCAST</strong>：表示网卡有广播地址，可发送广播包；</li><li><strong>MULTICAST</strong>：表示网卡可发送多播包；</li><li><strong>LOWER_UP</strong>：表示L1启动，即网线插入；</li><li><strong>MTU1500</strong>：表示最大传输单元，它属于第二层链路层概念，当MAC头加正文大于1500自己时，需要启动分片传输；</li><li><strong>queueing discipline</strong>：表示排队规则，内核通过网络接口发送数据，需要为该接口配置排队规则将数据包加入队列<ul><li><em>pfifo</em>：先入先出；</li><li><em>pfifo-fast</em>：它的队列包含三个波段，每个波段先入先出，根据服务类型<strong>TOC</strong>将数据包放入不同的波段；</li></ul></li></ul></li></ol><h2 id="IP地址的分配"><a href="#IP地址的分配" class="headerlink" title="IP地址的分配"></a>IP地址的分配</h2><ol><li><p>手动配置：</p><pre><code class="{.line-numbers}"> # 使用ifconfig sudo ifconfig eth1 10.0.0.1/24 sudo ifconfig eth1 up #使用iproute2 sudo ip addr add 10.0.0.1/24 dev eth1 sudo ip link set up eth1</code></pre></li><li><p><strong>动态主机配置协议(DHCP)</strong>，主要机制：</p><ul><li>新机器使用IP0.0.0.0向目标IP255.255.255.255发送广播，内部使用UDP封装BOOTP；</li><li><strong>DHCP SERVER</strong>，收到广播，辨识MAC，向新机器分配IP，此过程成为<strong>DHCP Offer</strong>，DHCP Server同样使用0.0.0.0作为本机IP，向广播IP255.255.255.255发送包括IP在内的子网掩码、网关、IP租用期等数据。</li><li>新机器收到广播，向广播IP发送<strong>DHCP Request</strong>数据包，包括自身MAC、接受的IP、提供IP的DHCP服务器地址等，此时新机器的IP仍为0.0.0.0。</li><li>DHCP Server收到客户端DHCP Request，使用本机IP向客户机发送<strong>DHCP ACK</strong>消息，接受客户机选择。</li><li>在租用期过去一半时，客户机会向对应的DHCP Server发送DHCP Request消息，并根据服务器返回的ACK消息更新租用期限和TCP/IP参数。</li></ul></li><li><p><strong>预启动执行环境(PXE)</strong>，使用PXE管理员可以自动给数据中心的服务器安装操作系统。</p><ul><li>操作系统的启动：<ul><li>启动BIOS，读取硬盘MBR启动扇区，启动GRUB；</li><li>GRUB加载内核、作为根文件系统initramfs文件；</li><li>内核启动，初始化操作系统；</li></ul></li><li>PXE在BIOS启动之后发挥作用，主要流程如下：<ul><li>PXE客户端放在BIOS中，通过BIOS将PXE加载到内存中；</li><li>PXE客户端发起DHCP请求，HDHCP Server给PXE客户端分配IP，并告知其PXE服务器地址、启动文件位置；</li><li>PXE客户端使用<strong>TFTP协议</strong>向TFTP服务器请求下载启动文件，所以PXE服务器上还需要配置TFTP服务器；</li><li>PXE客户端根据收到的启动文件向TFTP服务器请求计算机配置信息文件，告知客户端内核、initramfs位置；</li><li>PXE客户端请求内核文件和initramfs文件；</li><li>PXE客户端启动操作系统内核。</li></ul></li></ul></li></ol><h2 id="MAC——媒体访问控制"><a href="#MAC——媒体访问控制" class="headerlink" title="MAC——媒体访问控制"></a>MAC——媒体访问控制</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;分层&quot;&gt;&lt;a href=&quot;#分层&quot; class=&quot;headerlink&quot; title=&quot;分层&quot;&gt;&lt;/a&gt;分层&lt;/h2&gt;&lt;h3 id=&quot;总分为七层，这里忽略应用层后的表示层和会话层：&quot;&gt;&lt;a href=&quot;#总分为七层，这里忽略应用层后的表示层和会话层：&quot; class
      
    
    </summary>
    
    
      <category term="Computer network" scheme="http://sioce.me/categories/Computer-network/"/>
    
    
      <category term="Computer network" scheme="http://sioce.me/tags/Computer-network/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript leaning</title>
    <link href="http://sioce.me/2020/07/28/JavaScript-leaning/"/>
    <id>http://sioce.me/2020/07/28/JavaScript-leaning/</id>
    <published>2020-07-28T14:06:50.000Z</published>
    <updated>2020-07-28T14:10:16.873Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JavaScript基础"><a href="#JavaScript基础" class="headerlink" title="JavaScript基础"></a>JavaScript基础</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><ol><li>共六种：String/Number/Boolean/null/undefine/object；</li><li>数据类型之间的相互转换；</li><li>JS计算精度不高；</li><li>JS的基本运算；</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;JavaScript基础&quot;&gt;&lt;a href=&quot;#JavaScript基础&quot; class=&quot;headerlink&quot; title=&quot;JavaScript基础&quot;&gt;&lt;/a&gt;JavaScript基础&lt;/h2&gt;&lt;h3 id=&quot;基本数据类型&quot;&gt;&lt;a href=&quot;#基本数据类型&quot;
      
    
    </summary>
    
    
      <category term="JS" scheme="http://sioce.me/categories/JS/"/>
    
    
      <category term="JS" scheme="http://sioce.me/tags/JS/"/>
    
  </entry>
  
</feed>
